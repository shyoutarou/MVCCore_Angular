{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/store/index.ts","./src/app/views/empresasListView.component.html","./src/app/views/empresasListView.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;;;;;;;ACLO,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,gBAAgB,CAAC;KAC1B;;wEAFY,YAAY;0GAAZ,YAAY;QCPzB,yEAAiB;QACb,yEAAsB;QAClB,qEAAI;QAAA,uDAAW;QAAA,4DAAK;QACpB,0EAA6B;QACjC,4DAAM;QACN,yEAAsB;QAClB,qEAAI;QAAA,+DAAI;QAAA,4DAAK;QACjB,4DAAM;QACV,4DAAM;;QANM,0DAAW;QAAX,0EAAW;;;;;;;;;;;;;;;;;;;;;;;ACDmC;AACF;AAET;AACsB;AAC/B;;AAc/B,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,CAAC,+CAAK,CAAC,YAJT;YACL,oEAAa;YACb,kEAAgB;SACnB;mIAIU,SAAS,mBAVd,wDAAY;QACZ,8EAAe,aAGjB,oEAAa;QACb,kEAAgB;;;;;;;;;;;;;;;;;;;ACZe;;;AAG9B,MAAM,KAAK;IAEd,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAE7B,aAAQ,GAAG,EAAS,CAAC;IAFY,CAAC;IAIzC,YAAY;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAK,cAAc,CAAC;aACnC,IAAI,CAAC,mDAAG,CAAC,IAAI,CAAC,EAAE;YACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO;QACX,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;;0DAZQ,KAAK;sGAAL,KAAK,WAAL,KAAK;;;;;;;;;;;;;;;;;;;;;;;ICJZ,qEAAqC;IAAA,uDAA8C;IAAA,4DAAK;;;IAAnD,0DAA8C;IAA9C,2HAA8C;;ACKlF,MAAM,eAAe;IAExB,YAAmB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;IAC/B,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;aACpB,SAAS,EAAE,CAAC;IACrB,CAAC;;8EARQ,eAAe;6GAAf,eAAe;QDP5B,yEAAiB;QACf,qEAAI;QACA,yGAAwF;QAC5F,4DAAK;QACP,4DAAM;;QAFkB,0DAAiB;QAAjB,uFAAiB;;;;;;;;;;;;;;;;;AEFzC,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAGD,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'the-shop',\n    templateUrl: \"app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'Lista Empresas';\n}\n","<div class=\"row\">\r\n    <div class=\"col-md-9\">\r\n        <h1>{{ title }}</h1>\r\n        <empresa-list></empresa-list>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n        <h3>Cart</h3>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\nimport { AppComponent } from './app.component';\nimport { EmpresaListView } from './views/empresasListView.component';\r\nimport { Store } from './store/index';\r\n\n@NgModule({\n  declarations: [\n        AppComponent,\n        EmpresaListView\n  ],\n  imports: [\n      BrowserModule,\r\n      HttpClientModule \n  ],\n  providers: [Store],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class Store {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public empresas = [] as any;\r\n\r\n    loadEmpresas() {\r\n        return this.http.get<[]>(\"/api/empresa\")\r\n            .pipe(map(data => {\r\n                this.empresas = data;\r\n                return;\r\n            }));\r\n    }\r\n}","<div class=\"row\">\r\n  <ul>\r\n      <li *ngFor=\"let p of store.empresas\">{{ p.cnpj }}: {{ p.nomeFantasia }}: {{ p.uf }}</li>\r\n  </ul>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from '../store/index';\r\n\r\n@Component({\r\n  selector: \"empresa-list\",\r\n  templateUrl: \"empresasListView.component.html\"\r\n})\r\nexport class EmpresaListView implements OnInit {\r\n\r\n    constructor(public store: Store) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.store.loadEmpresas()\r\n            .subscribe();\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}